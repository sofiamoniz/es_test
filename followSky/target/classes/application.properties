spring.jpa.hibernate.ddl-auto=update



## DB PRODUCTION/DOCKER:
spring.datasource.username=root
spring.datasource.password=root
jdbc.url = jdbc:mysql://db:3306/es_lab?useSSL=false&allowPublicKeyRetrieval=true

## DB LOCAL:
##spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/es_lab

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings = false

# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto = create


spring.kafka.consumer.bootstrap-servers = localhost:9092
#spring.kafka.consumer.bootstrap-servers = 172.0.0.6:9092    
spring.kafka.consumer.group-id = eslab
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers = localhost:9092
#spring.kafka.producer.bootstrap-servers = 172.0.0.6:9092 
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
